@model Tuan4_NguyenQuocTron.Models.KhachHang

@{
    ViewBag.Title = "Dangky";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Dangky</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>KhachHang</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.hoten, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.hoten, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.hoten, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tendangnhap, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tendangnhap, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tendangnhap, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.matkhau, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.matkhau, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.matkhau, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2" for="MatKhauXacNhan">Mật khẩu xác nhận:  </label>
        <div class="col-md-10">
            <input class="form-control text-box single-line input-validation-error" data-val="true" data-val-required="Phải nhập mật khẩu xác nhận!"
                   id="MatKhauXacNhan" name="MatKhauXacNhan" type="password" value="" aria describedby="MatKhauXacNhan-error" aria-invalid="true">
            @ViewData["NhapMKXN"]
            @ViewData["MatKhauGiongNhau"]
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2 inputEmail" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control",@type="email" }, @required = "required" })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.diachi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.diachi, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.diachi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dienthoai, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dienthoai, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dienthoai, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ngaysinh, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ngaysinh, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ngaysinh, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Đăng ký" class="btn btn-default btnDangKy" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script>
    function checkPhoneNumber() {
        var flag = false;
        var phone = $('#dienthoai').val().trim(); // ID của trường Số điện thoại
        phone = phone.replace('(+84)', '0');
        phone = phone.replace('+84', '0');
        phone = phone.replace('0084', '0');
        phone = phone.replace(/ /g, '');
        if (phone != '') {
            var firstNumber = phone.substring(0, 2);
            if ((firstNumber == '09' || firstNumber == '08') && phone.length == 10) {
                if (phone.match(/^\d{10}/)) {
                    flag = true;
                }
            } else if (firstNumber == '01' && phone.length == 11) {
                if (phone.match(/^\d{11}/)) {
                    flag = true;
                }
            }
        }
        return flag;
    }
    $(".btnDangKy").click(() => {
        var error;
        if (!checkPhoneNumber()) {
            $('#dienthoai').parents('div.form-group').addClass('has-error'); // ID của trường Số điện thoại
            $('#dienthoai').focus(); // ID của trường Số điện thoại
            error++;

        }


        var email = $(".inputEmail");
        console.log(email);
        var formatEmail = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        console.log(formatEmail.test($(".inputEmail").val))
        console.log(email.val().match(formatEmail));
        if (formatEmail.test($(".inputEmail").val)) {
            $('.inputEmail').parents('div.form-group').addClass('has-error'); // ID của trường Số điện thoại
            $('.inputEmail').focus(); // ID của trường Số điện thoại
        }
        if (error != 0) {
            return false;
        }
    })
</script>